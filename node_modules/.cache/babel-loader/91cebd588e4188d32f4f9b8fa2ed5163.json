{"ast":null,"code":"var _jsxFileName = \"/Users/nickbrinser/Desktop/xStateApp/x-state-proj/src/App.js\";\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { redditMachine } from \"./redditMachine\";\nimport { SubReddit } from \"./SubReddit\";\nconst subreddits = [\"frontend\", \"reactjs\", \"vuejs\"];\n\nconst App = () => {\n  const [current, send] = useMachine(redditMachine);\n  const {\n    subreddit\n  } = current.context;\n  return /*#__PURE__*/React.createElement(\"main\", {\n    \"data-machine\": redditMachine.id,\n    \"data-state\": current.toStrings().join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => {\n      send(\"SELECT\", {\n        name: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Select One\"), subreddits.map(subreddit => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: subreddit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }\n    }, \" \", subreddit);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, current.matches(\"idle\") ? \"Select a subreddit\" : null), subreddit && /*#__PURE__*/React.createElement(SubReddit, {\n    service: subreddit,\n    key: subreddit.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nickbrinser/Desktop/xStateApp/x-state-proj/src/App.js"],"names":["React","useMachine","redditMachine","SubReddit","subreddits","App","current","send","subreddit","context","id","toStrings","join","e","name","target","value","map","matches"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,UAAU,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,CAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,IAAV,IAAkBN,UAAU,CAACC,aAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBF,OAAO,CAACG,OAA9B;AAEA,sBACE;AACE,oBAAcP,aAAa,CAACQ,EAD9B;AAEE,kBAAYJ,OAAO,CAACK,SAAR,GAAoBC,IAApB,CAAyB,GAAzB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACfN,MAAAA,IAAI,CAAC,QAAD,EAAW;AAAEO,QAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAX,CAAJ;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGZ,UAAU,CAACa,GAAX,CAAgBT,SAAD,IAAe;AAC7B,wBAAO;AAAQ,MAAA,GAAG,EAAEA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0BA,SAA1B,CAAP;AACD,GAFA,CANH,CADF,CAJF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACY,OAAR,CAAgB,MAAhB,IAA0B,oBAA1B,GAAiD,IAAtD,CADF,EAEGV,SAAS,iBAAI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,SAApB;AAA+B,IAAA,GAAG,EAAEA,SAAS,CAACE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,CAhBF,CADF;AAuBD,CA3BD;;AA6BA,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { redditMachine } from \"./redditMachine\";\nimport { SubReddit } from \"./SubReddit\";\n\nconst subreddits = [\"frontend\", \"reactjs\", \"vuejs\"];\n\nconst App = () => {\n  const [current, send] = useMachine(redditMachine);\n  const { subreddit } = current.context;\n\n  return (\n    <main\n      data-machine={redditMachine.id}\n      data-state={current.toStrings().join(\" \")}\n    >\n      <header>\n        <select\n          onChange={(e) => {\n            send(\"SELECT\", { name: e.target.value });\n          }}\n        >\n          <option disabled>Select One</option>\n          {subreddits.map((subreddit) => {\n            return <option key={subreddit}> {subreddit}</option>;\n          })}\n        </select>\n      </header>\n      <div>\n        <h1>{current.matches(\"idle\") ? \"Select a subreddit\" : null}</h1>\n        {subreddit && <SubReddit service={subreddit} key={subreddit.id} />}\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}